unit DestinazioniU;

interface

uses
  FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Phys.PG,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  Data.DB,
  FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, DbU, System.SysUtils;

type
  tDestinazioni = class

    constructor Create();
    destructor Destroy();

    function aggiungi(aNome, aStato, aTipo: String;
      aIdEdificio: SmallInt): boolean;
    function remove(aId: SmallInt): boolean;
    function update(aNome, aStato, aTipo: String;
      aIdEdificio, aId: SmallInt): boolean;
    function getList(aFiltr: String): TFDQuery;
  private
    fDB: tDB;
  end;

implementation

{ tDestinazioni }

constructor tDestinazioni.Create;
begin

  inherited;
  fDB := tDB.Create();

end;

destructor tDestinazioni.Destroy;
begin

  inherited;
  fDB := tDB.Create();

end;

function tDestinazioni.aggiungi(aNome, aStato, aTipo: String;
  aIdEdificio: SmallInt): boolean;
var
  lQuery: String;
  lFDQuery: TFDQuery;

begin

  result := true;
  try
    lQuery := 'INSERT INTO destinazione (nome, stato, tipo, edificio) VALUES (' +
      QuotedStr(aNome) + ', ' + QuotedStr(aStato) + ', ' + QuotedStr(aTipo) +
      ', ' + aIdEdificio.ToString + ')';

    lFDQuery := fDB.executeQuery(lQuery);

    if (lFDQuery.RowsAffected > 0) then
    begin

      result := true;

    end;

  finally

    lFDQuery.Free;

  end;

end;

function tDestinazioni.getList(aFiltr: String): TFDQuery;
begin

end;

function tDestinazioni.remove(aId: SmallInt): boolean;
var
  lQuery: String;
  lFDQuery: TFDQuery;

begin
  result := true;
  try
    lQuery := 'DELETE FROM destinazione WHERE id=' + (aId).ToString;

    lFDQuery := fDB.executeQuery(lQuery);

    if (lFDQuery.RowsAffected > 0) then
    begin

      result := true;

    end;
  finally

    lFDQuery.Free;

  end;

end;

function tDestinazioni.update(aNome, aStato, aTipo: String;
  aIdEdificio, aId: SmallInt): boolean;
begin

end;

end.
